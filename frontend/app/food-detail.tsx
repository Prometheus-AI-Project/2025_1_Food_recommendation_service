import { View, Text, StyleSheet, TouchableOpacity, StatusBar, ScrollView } from "react-native"
import { router, useLocalSearchParams } from "expo-router"
import { Ionicons } from "@expo/vector-icons"

export default function FoodDetail() {
  const { category, taste, foodId } = useLocalSearchParams()

  // Sample food data - you can replace this with your actual data
  const foodData = {
    beansprout1: {
      name: "ÏΩ©ÎÇòÎ¨ºÍµ≠",
      emoji: "üç≤",
      original: { carbs: 19, protein: 19, fat: 19 },
      combined: { carbs: 19, protein: 19, fat: 19 },
      description: "ÏÑúÎ°ú ÏòÅÏñëÏùÑ Î≥¥ÏôÑÌïòÎ©∞, ÎßõÍ≥º Í±¥Í∞ïÏùÑ ÎèôÏãúÏóê Ï±ôÍ∏∏ Ïàò ÏûàÎäî Îß§Ïö∞ Ï¢ãÏùÄ Ï°∞Ìï©ÏûÖÎãàÎã§",
      details: [
        "ÎåÄÌïúÌï≠Í≥µÍ≥º ÏïÑÏãúÏïÑÎÇòÌï≠Í≥µÏùò ÎßàÏùºÎ¶¨ÏßÄ ÌÜµÌï©ÏïàÏóê ÎåÄÌïú Ï†ïÍ¥ë ÎãπÍµ≠Ïùò Ïã¨ÏÇ¨ Í∞úÏãúÍ∞Ä Îä¶Ïñ¥ÏúºÎ°ú Îã§Í∞ÄÏò® Í∞ÄÏö¥Îç∞ Ìï©Î≥ë ÎπÑÏö© ÏÇ∞Ï†ïÏóê Í¥ÄÏã¨Ïù¥ Ïè†Î¶¨Í≥† ÏûàÏäµÎãàÎã§.",
        "Ìï≠Í≥µÏóÖÍ≥ÑÏóêÏÑúÎäî Ìï≠Í≥µÍ∏∞ ÌÉëÏäπÏúºÎ°ú Ï†ÅÎ¶ΩÌïú ÎßàÏùºÎ¶¨ÏßÄÎäî 1ÎåÄ 1Î°ú ÌÜµÌï©Ìï† Ïàò ÏûàÏßÄÎßå, Ïã†Ïö©Ïπ¥Îìú Ïù¥Ïö© Îì±ÏúºÎ°ú ÏåìÏùÄ Ï†úÌú¥ ÎßàÏùºÎ¶¨ÏßÄÎäî 1ÎåÄ 1 Ï†ÑÌôòÏù¥ Ïñ¥Î†§Ïö∏ Í≤ÉÏù¥ÎùºÎäî Í¥ÄÏ∏°Ïù¥ Ï†úÍ∏∞Îê©ÎãàÎã§.",
        "Ïò§Îäò(8Ïùº) ÏóÖÍ≥ÑÏóê Îî∞Î•¥Î©¥ ÎåÄÌïúÌï≠Í≥µÏùÄ Ïò§Îäî 12ÏùºÍπåÏßÄ Í≥µÏ†ïÍ±∞ÎûòÏúÑÏõêÌöåÏóê ÏïÑÏãúÏïÑÏùò ÎßàÏùºÎ¶¨ÏßÄ ÌÜµÌï© ÎπÑÏö©Í≥º Ï†ÑÌôò Í≥ÑÌöç Îì±ÏùÑ Îã¥ÏùÄ ÌÜµÌï©ÏïàÏùÑ Ï†úÏ∂úÌï† Í≥ÑÌöçÏûÖÎãàÎã§.",
      ],
    },
    soybean: {
      name: "ÎêúÏû•Íµ≠",
      emoji: "üç≤",
      original: { carbs: 15, protein: 22, fat: 18 },
      combined: { carbs: 20, protein: 25, fat: 20 },
      description: "ÏòÅÏñë Í∑†ÌòïÏù¥ Ïûò ÎßûÎäî Ï°∞Ìï©ÏúºÎ°ú Í±¥Í∞ïÌïú ÏãùÏÇ¨Î•º ÏúÑÌïú Ï¢ãÏùÄ ÏÑ†ÌÉùÏûÖÎãàÎã§",
      details: [
        "ÎêúÏû•Íµ≠ÏùÄ ÌïúÍµ≠Ïùò Ï†ÑÌÜµ Î∞úÌö®ÏãùÌíàÏúºÎ°ú ÌíçÎ∂ÄÌïú Îã®Î∞±ÏßàÍ≥º Ïú†ÏùµÌïú ÎØ∏ÏÉùÎ¨ºÏùÑ Ìï®Ïú†ÌïòÍ≥† ÏûàÏäµÎãàÎã§.",
        "Ïù¥ Ï°∞Ìï©ÏùÄ ÌïÑÏàò ÏïÑÎØ∏ÎÖ∏ÏÇ∞ÏùÑ Í≥®Í≥†Î£® Ï†úÍ≥µÌïòÏó¨ ÏòÅÏñëÌïôÏ†ÅÏúºÎ°ú Ïö∞ÏàòÌïú ÏãùÎã®ÏùÑ Íµ¨ÏÑ±Ìï©ÎãàÎã§.",
        "Î∞úÌö® Í≥ºÏ†ïÏóêÏÑú ÏÉùÏÑ±Îêú Ïú†ÏÇ∞Í∑†Ïù¥ Ïû• Í±¥Í∞ïÏóê ÎèÑÏõÄÏùÑ Ï£ºÎ©∞, ÏÜåÌôî Ìù°ÏàòÏú®ÏùÑ ÎÜíÏó¨Ï§çÎãàÎã§.",
      ],
    },
    beansprout2: {
      name: "ÏΩ©ÎÇòÎ¨ºÍµ≠",
      emoji: "üç≤",
      original: { carbs: 17, protein: 20, fat: 16 },
      combined: { carbs: 22, protein: 24, fat: 19 },
      description: "ÎπÑÌÉÄÎØºÍ≥º ÎØ∏ÎÑ§ÎûÑÏù¥ ÌíçÎ∂ÄÌïú Ï°∞Ìï©ÏúºÎ°ú Î©¥Ïó≠Î†• Í∞ïÌôîÏóê ÎèÑÏõÄÏù¥ Îê©ÎãàÎã§",
      details: [
        "ÏΩ©ÎÇòÎ¨ºÏùÄ ÎπÑÌÉÄÎØº CÏôÄ ÏãùÏù¥ÏÑ¨Ïú†Í∞Ä ÌíçÎ∂ÄÌïòÏó¨ Î©¥Ïó≠Î†• Í∞ïÌôîÏôÄ ÏÜåÌôî Í±¥Í∞ïÏóê Ï¢ãÏäµÎãàÎã§.",
        "Ï†ÄÏπºÎ°úÎ¶¨ Í≥†ÏòÅÏñë ÏãùÌíàÏúºÎ°ú Îã§Ïù¥Ïñ¥Ìä∏ÏóêÎèÑ Ìö®Í≥ºÏ†ÅÏù¥Î©∞ Ìè¨ÎßåÍ∞êÏùÑ Ïò§Îûò Ïú†ÏßÄÏãúÏºúÏ§çÎãàÎã§.",
        "ÏïÑÏä§ÌååÎùºÍ∏¥ÏÇ∞Ïù¥ ÌíçÎ∂ÄÌïòÏó¨ ÌîºÎ°ú ÌöåÎ≥µÍ≥º ÏàôÏ∑® Ìï¥ÏÜåÏóêÎèÑ ÎèÑÏõÄÏùÑ Ï§çÎãàÎã§.",
      ],
    },
  }

  const currentFood = foodData[foodId as keyof typeof foodData] || foodData.beansprout1

  const handleSelectFood = () => {
    router.push({
      pathname: '/final-result',
      params: {
        category: category,
        taste: taste,
        food: foodId,
        foodName: currentFood.name,
      },
    })
  }

  const handleBack = () => {
    router.back()
  }

  const renderNutritionBar = (value: number, maxValue = 30) => {
    const percentage = (value / maxValue) * 100
    return (
      <View style={styles.nutritionBarContainer}>
        <View style={styles.nutritionBarBackground}>
          <View style={[styles.nutritionBarFill, { height: `${percentage}%` }]} />
        </View>
        <Text style={styles.nutritionValue}>{value}</Text>
      </View>
    )
  }

  return (
    <View style={styles.container}>
      <StatusBar barStyle="light-content" backgroundColor="black" />

      {/* Header */}
      <View style={styles.header}>
        <TouchableOpacity onPress={handleBack} style={styles.backButton}>
          <Ionicons name="chevron-back" size={24} color="white" />
        </TouchableOpacity>
        <Text style={styles.headerTitle}>ÏùåÏãù ÏÑ∏Î∂ÄÏ†ïÎ≥¥</Text>
        <View style={styles.placeholder} />
      </View>

      <ScrollView style={styles.content} showsVerticalScrollIndicator={false}>
        {/* Food Title */}
        <View style={styles.foodTitleContainer}>
          <Text style={styles.foodEmoji}>{currentFood.emoji}</Text>
          <Text style={styles.foodName}>{currentFood.name}</Text>
        </View>

        {/* Nutrition Charts */}
        <View style={styles.chartsContainer}>
          <View style={styles.chartSection}>
            <Text style={styles.chartTitle}>Ï≤òÏùå ÏùåÏãù</Text>
            <View style={styles.nutritionChart}>
              {renderNutritionBar(currentFood.original.carbs)}
              {renderNutritionBar(currentFood.original.protein)}
              {renderNutritionBar(currentFood.original.fat)}
            </View>
            <View style={styles.nutritionLabels}>
              <Text style={styles.nutritionLabel}>ÌÉÑÏàòÌôîÎ¨º</Text>
              <Text style={styles.nutritionLabel}>Îã®Î∞±Ïßà</Text>
              <Text style={styles.nutritionLabel}>ÏßÄÎ∞©</Text>
            </View>
          </View>

          <View style={styles.chartSection}>
            <Text style={styles.chartTitle}>Ïù¥ ÏùåÏãùÏùÑ Ìï®Íªò ÏÑ≠Ï∑®ÌïúÎã§Î©¥?</Text>
            <View style={styles.nutritionChart}>
              {renderNutritionBar(currentFood.combined.carbs)}
              {renderNutritionBar(currentFood.combined.protein)}
              {renderNutritionBar(currentFood.combined.fat)}
            </View>
            <View style={styles.nutritionLabels}>
              <Text style={styles.nutritionLabel}>ÌÉÑÏàòÌôîÎ¨º</Text>
              <Text style={styles.nutritionLabel}>Îã®Î∞±Ïßà</Text>
              <Text style={styles.nutritionLabel}>ÏßÄÎ∞©</Text>
            </View>
          </View>
        </View>

        {/* Description */}
        <View style={styles.descriptionContainer}>
          <View style={styles.descriptionHeader}>
            <Text style={styles.descriptionTitle}>{currentFood.description}</Text>
            <View style={styles.badge}>
              <Text style={styles.badgeText}>100g Í∏∞Ï§Ä</Text>
            </View>
          </View>

          <View style={styles.detailsContainer}>
            {currentFood.details.map((detail, index) => (
              <Text key={index} style={styles.detailText}>
                {detail}
              </Text>
            ))}
          </View>
        </View>
      </ScrollView>

      {/* Select Button */}
      <TouchableOpacity style={styles.selectButton} onPress={handleSelectFood}>
        <Text style={styles.selectButtonText}>Ïù¥ ÏùåÏãù ÏÑ†ÌÉùÌïòÍ∏∞</Text>
      </TouchableOpacity>
    </View>
  )
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "black",
  },
  header: {
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "space-between",
    paddingHorizontal: 20,
    paddingTop: 60,
    paddingBottom: 20,
  },
  backButton: {
    padding: 5,
  },
  headerTitle: {
    fontSize: 18,
    fontWeight: "600",
    color: "white",
  },
  placeholder: {
    width: 34,
  },
  content: {
    flex: 1,
    paddingHorizontal: 20,
  },
  foodTitleContainer: {
    flexDirection: "row",
    alignItems: "center",
    marginBottom: 40,
  },
  foodEmoji: {
    fontSize: 24,
    marginRight: 8,
  },
  foodName: {
    fontSize: 18,
    fontWeight: "600",
    color: "white",
  },
  chartsContainer: {
    flexDirection: "row",
    justifyContent: "space-between",
    marginBottom: 40,
  },
  chartSection: {
    flex: 1,
    alignItems: "center",
  },
  chartTitle: {
    fontSize: 14,
    color: "white",
    marginBottom: 20,
    textAlign: "center",
  },
  nutritionChart: {
    flexDirection: "row",
    alignItems: "flex-end",
    justifyContent: "center",
    height: 120,
    marginBottom: 10,
  },
  nutritionBarContainer: {
    alignItems: "center",
    marginHorizontal: 8,
  },
  nutritionBarBackground: {
    width: 30,
    height: 100,
    backgroundColor: "#333",
    borderRadius: 4,
    justifyContent: "flex-end",
    marginBottom: 5,
  },
  nutritionBarFill: {
    width: "100%",
    backgroundColor: "#6BFF4A",
    borderRadius: 4,
    minHeight: 4,
  },
  nutritionValue: {
    fontSize: 12,
    color: "white",
    fontWeight: "600",
  },
  nutritionLabels: {
    flexDirection: "row",
    justifyContent: "center",
  },
  nutritionLabel: {
    fontSize: 12,
    color: "#999",
    marginHorizontal: 8,
    textAlign: "center",
    width: 30,
  },
  descriptionContainer: {
    marginBottom: 100,
  },
  descriptionHeader: {
    flexDirection: "row",
    alignItems: "flex-start",
    justifyContent: "space-between",
    marginBottom: 20,
  },
  descriptionTitle: {
    fontSize: 18,
    fontWeight: "600",
    color: "white",
    flex: 1,
    lineHeight: 24,
  },
  badge: {
    backgroundColor: "#333",
    paddingHorizontal: 12,
    paddingVertical: 6,
    borderRadius: 12,
    marginLeft: 10,
  },
  badgeText: {
    fontSize: 12,
    color: "#6BFF4A",
    fontWeight: "500",
  },
  detailsContainer: {
    gap: 15,
  },
  detailText: {
    fontSize: 14,
    color: "#999",
    lineHeight: 20,
  },
  selectButton: {
    margin: 20,
    backgroundColor: "#6BFF4A",
    paddingVertical: 16,
    borderRadius: 12,
    alignItems: "center",
  },
  selectButtonText: {
    fontSize: 16,
    color: "black",
    fontWeight: "600",
  },
})
