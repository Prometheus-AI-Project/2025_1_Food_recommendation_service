import { View, Text, StyleSheet, TouchableOpacity, StatusBar, ScrollView, ImageBackground, Image } from "react-native"
import { router, useLocalSearchParams } from "expo-router"

export default function FinalResult() {
  const { category, taste, food, foodName } = useLocalSearchParams()

  // Sample result data based on the combination
  const getResultData = () => {
    return {
      grade: "A",
      title: "Ï≤òÏùå ÏùåÏãùÏùò Î∂ÄÏ°±Ìïú Îã®Î∞±ÏßàÏùÑ Ïù¥Î†áÍ≤å Ï†ÄÎ†¥Í≤å Î≥¥Ï∂©Ìï¥Ï§Ñ Ïàò ÏûàÏñ¥Ïöî!",
      subtitle: "100g Í∏∞Ï§Ä",
      description: [
        "ÎåÄÌïúÌï≠Í≥µÍ≥º ÏïÑÏãúÏïÑÎÇòÌï≠Í≥µÏùò ÎßàÏùºÎ¶¨ÏßÄ ÌÜµÌï©ÏïàÏóê ÎåÄÌïú Ï†ïÍ¥ë ÎãπÍµ≠Ïùò Ïã¨ÏÇ¨ Í∞úÏãúÍ∞Ä Îä¶Ïñ¥ÏúºÎ°ú Îã§Í∞ÄÏò® Í∞ÄÏö¥Îç∞ Ìï©Î≥ë ÎπÑÏö© ÏÇ∞Ï†ïÏóê Í¥ÄÏã¨Ïù¥ Ïè†Î¶¨Í≥† ÏûàÏäµÎãàÎã§.",
        "Ìï≠Í≥µÏóÖÍ≥ÑÏóêÏÑúÎäî Ìï≠Í≥µÍ∏∞ ÌÉëÏäπÏúºÎ°ú Ï†ÅÎ¶ΩÌïú ÎßàÏùºÎ¶¨ÏßÄÎäî 1ÎåÄ 1Î°ú ÌÜµÌï©Ìï† Ïàò ÏûàÏßÄÎßå, Ïã†Ïö©Ïπ¥Îìú Ïù¥Ïö© Îì±ÏúºÎ°ú ÏåìÏùÄ Ï†úÌú¥ ÎßàÏùºÎ¶¨ÏßÄÎäî 1ÎåÄ 1 Ï†ÑÌôòÏù¥ Ïñ¥Î†§Ïö∏ Í≤ÉÏù¥ÎùºÎäî Í¥ÄÏ∏°Ïù¥ Ï†úÍ∏∞Îê©ÎãàÎã§.",
        "Ïò§Îäò(8Ïùº) ÏóÖÍ≥ÑÏóê Îî∞Î•¥Î©¥ ÎåÄÌïúÌï≠Í≥µÏùÄ Ïò§Îäî 12ÏùºÍπåÏßÄ Í≥µÏ†ïÍ±∞ÎûòÏúÑÏõêÌöåÏóê ÏïÑÏãúÏïÑÏùò ÎßàÏùºÎ¶¨ÏßÄ ÌÜµÌï© ÎπÑÏö©Í≥º Ï†ÑÌôò Í≥ÑÌöç Îì±ÏùÑ Îã¥ÏùÄ ÌÜµÌï©ÏïàÏùÑ Ï†úÏ∂úÌï† Í≥ÑÌöçÏûÖÎãàÎã§.",
        "Ïù¥Î≤à ÌÜµÌï©ÏúºÎ°ú Ïù∏Ìï¥ ÏÜåÎπÑÏûêÎì§ÏùÄ ÎçîÏö± Îã§ÏñëÌïú ÌòúÌÉùÏùÑ ÎàÑÎ¶¥ Ïàò ÏûàÏùÑ Í≤ÉÏúºÎ°ú ÏòàÏÉÅÎêòÎ©∞, Ìï≠Í≥µÏóÖÍ≥ÑÏùò Í≤ΩÏüÅÎ†• Í∞ïÌôîÏóêÎèÑ Í∏∞Ïó¨Ìï† Í≤ÉÏúºÎ°ú Î≥¥ÏûÖÎãàÎã§.",
        "Ï†ÑÎ¨∏Í∞ÄÎì§ÏùÄ Ïù¥Îü¨Ìïú Î≥ÄÌôîÍ∞Ä Íµ≠ÎÇ¥ Ìï≠Í≥µÏÇ∞ÏóÖÏùò Í∏ÄÎ°úÎ≤å Í≤ΩÏüÅÎ†•ÏùÑ ÎÜíÏù¥Îäî Ï§ëÏöîÌïú Ï†ÑÌôòÏ†êÏù¥ Îê† Í≤ÉÏù¥ÎùºÍ≥† Î∂ÑÏÑùÌïòÍ≥† ÏûàÏäµÎãàÎã§.",
        "Ìñ•ÌõÑ ÌÜµÌï© Í≥ºÏ†ïÏóêÏÑú Î∞úÏÉùÌï† Ïàò ÏûàÎäî Îã§ÏñëÌïú Ïù¥ÏäàÎì§Ïóê ÎåÄÌïú ÏÑ∏Ïã¨Ìïú Í≤ÄÌÜ†ÏôÄ Ï§ÄÎπÑÍ∞Ä ÌïÑÏöîÌï† Í≤ÉÏúºÎ°ú Î≥¥ÏûÖÎãàÎã§.",
      ],
    }
  }

  const resultData = getResultData()

  const handleGoHome = () => {
    router.push("/")
  }

  return (
    <View style={styles.container}>
      <StatusBar barStyle="light-content" backgroundColor="black" />

      {/* Header with food combination */}
      <View style={styles.header}>
        <View style={styles.combinationContainer}>
          <View style={styles.combinationItem}>
            <Text style={styles.combinationText}>ÌÜ†ÎßàÌÜ† Î∞îÏßà ÏÉêÎü¨Îìú</Text>
          </View>
          <Text style={styles.plusSign}>+</Text>
          <View style={styles.combinationItem}>
            <Text style={styles.combinationEmoji}>üç≤</Text>
            <Text style={styles.combinationText}>{foodName || "ÏΩ©ÎÇòÎ¨ºÍµ≠"}</Text>
          </View>
          <Text style={styles.questionText}>Ïùò Í∂ÅÌï©ÏùÄ?</Text>
        </View>
      </View>

      {/* Grade Section */}
      <View style={styles.gradeSection}>
        {/* <ImageBackground
          source={require('../assets/images/FinalBack.png')}
          style={styles.gradeBackground}
          imageStyle={styles.gradeBackgroundImage}
        >
          <Text style={styles.gradeText}>{resultData.grade}</Text>
        </ImageBackground> */}
        {/* Î∞∞Í≤Ω Ïù¥ÎØ∏ÏßÄ */}
        <Image source={require('../assets/images/FinalBack.png')} style={styles.backgroundImage} />

        {/* Í∞ÄÏö¥Îç∞ Score Ïù¥ÎØ∏ÏßÄ */}
        <Image source={require('../assets/images/Score.png')} style={styles.overlayImage} />
        <Text style={styles.combinationResult}>ÌÜ†ÎßàÌÜ† Î∞îÏßà ÏÉêÎü¨Îìú + {foodName || "ÏΩ©ÎÇòÎ¨ºÍµ≠"}</Text>

        {/* Progress indicator */}
        <View style={styles.progressContainer}>
          <View style={styles.progressDot} />
          <Text style={styles.progressText}>15</Text>
          <View style={styles.progressLine} />
          <Text style={styles.progressText}>40</Text>
        </View>
      </View>

      {/* Description Section */}
      <View style={styles.descriptionSection}>
        <View style={styles.descriptionHeader}>
          <Text style={styles.descriptionTitle}>{resultData.title}</Text>
          <View style={styles.badge}>
            <Text style={styles.badgeText}>{resultData.subtitle}</Text>
          </View>
        </View>

        <ScrollView
          style={styles.scrollContainer}
          showsVerticalScrollIndicator={false}
          contentContainerStyle={styles.scrollContent}
        >
          {resultData.description.map((paragraph, index) => (
            <Text key={index} style={styles.descriptionText}>
              {paragraph}
            </Text>
          ))}
        </ScrollView>
      </View>

      {/* Home Button */}
      <TouchableOpacity style={styles.homeButton} onPress={handleGoHome}>
        <Text style={styles.homeButtonText}>ÌôàÏúºÎ°ú</Text>
      </TouchableOpacity>
    </View>
  )
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "black",
  },
  header: {
    paddingHorizontal: 20,
    paddingTop: 60,
    paddingBottom: 20,
  },
  combinationContainer: {
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "center",
    flexWrap: "wrap",
  },
  combinationItem: {
    flexDirection: "row",
    alignItems: "center",
    backgroundColor: "#333",
    paddingHorizontal: 12,
    paddingVertical: 8,
    borderRadius: 20,
    marginHorizontal: 4,
  },
  combinationText: {
    color: "white",
    fontSize: 14,
    fontWeight: "500",
  },
  combinationEmoji: {
    fontSize: 16,
    marginRight: 4,
  },
  plusSign: {
    color: "white",
    fontSize: 16,
    marginHorizontal: 8,
  },
  questionText: {
    color: "white",
    fontSize: 16,
    fontWeight: "500",
    marginLeft: 8,
  },
  gradeSection: {
    alignItems: "center",
    paddingVertical: 40,
  },
  gradeBackground: {
    width: '100%',
    height: 200,
    justifyContent: "center",
    alignItems: "center",
    marginBottom: 20,
  },
  gradeBackgroundImage: {
    borderRadius: 20,
  },
  gradeText: {
    fontSize: 120,
    fontWeight: "bold",
    color: "white",
    textShadowColor: "rgba(0, 0, 0, 0.5)",
    textShadowOffset: { width: 2, height: 2 },
    textShadowRadius: 4,
  },
  combinationResult: {
    color: "white",
    fontSize: 14,
    marginBottom: 20,
    textAlign: "center",
  },
  progressContainer: {
    flexDirection: "row",
    alignItems: "center",
    width: "80%",
  },
  progressDot: {
    width: 8,
    height: 8,
    borderRadius: 4,
    backgroundColor: "#6BFF4A",
  },
  progressLine: {
    flex: 1,
    height: 2,
    backgroundColor: "#333",
    marginHorizontal: 10,
  },
  progressText: {
    color: "#666",
    fontSize: 12,
  },
  descriptionSection: {
    flex: 1,
    paddingHorizontal: 20,
  },
  descriptionHeader: {
    flexDirection: "row",
    alignItems: "flex-start",
    justifyContent: "space-between",
    marginBottom: 20,
  },
  descriptionTitle: {
    fontSize: 18,
    fontWeight: "600",
    color: "white",
    flex: 1,
    lineHeight: 24,
  },
  badge: {
    backgroundColor: "#333",
    paddingHorizontal: 12,
    paddingVertical: 6,
    borderRadius: 12,
    marginLeft: 10,
  },
  badgeText: {
    fontSize: 12,
    color: "#6BFF4A",
    fontWeight: "500",
  },
  scrollContainer: {
    flex: 1,
  },
  scrollContent: {
    paddingBottom: 20,
  },
  descriptionText: {
    fontSize: 14,
    color: "#999",
    lineHeight: 20,
    marginBottom: 15,
  },
  homeButton: {
    margin: 20,
    backgroundColor: "#6BFF4A",
    paddingVertical: 16,
    borderRadius: 12,
    alignItems: "center",
  },
  homeButtonText: {
    fontSize: 16,
    color: "black",
    fontWeight: "600",
  },
  backgroundImage: {
    position: 'absolute',
    width: '100%',
    height: 280,
    resizeMode: 'cover',
  },
  overlayImage: {
    width: 80,
    height: 120,
    resizeMode: 'contain',
    zIndex: 1,
  },
})
